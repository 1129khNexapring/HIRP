<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="MailMapper">
	<resultMap type="Mail" id="MailResultMap">
		<id property="mailNo" column="MAIL_NO"/>
		<result property="mailSender" column="MAIL_SENDER"/>
		<result property="mailRecipient" column="MAIL_RECIPIENT"/>
		<result property="mailReferrer" column="MAIL_REFERRER"/>
		<result property="mailTitle" column="MAIL_TITLE"/>
		<result property="mailContents" column="MAIL_CONTENTS"/>
		<result property="mailDate" column="MAIL_DATE"/>
		<result property="mailRead" column="MAIL_READ"/>
		<result property="importantMail" column="IMPORTANT_MAIL"/>
		<result property="temporaryStorage" column="TEMPORARY_STORAGE"/>
		<result property="mailWasteBasket" column="MAIL_WASTE_BASKET"/>
		<result property="fileName" column="FILE_NAME"/>
		<result property="fileReName" column="FILE_RENAME"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="emplId" column="EMPL_ID"/>
	</resultMap>
	
	<resultMap type="MailFile" id="MailFileResultMap">
		<id property="fileNo" column="FILE_NO"/>
		<result property="mailNo" column="MAIL_NO"/>
		<result property="fileName" column="FILE_NAME"/>
		<result property="fileExtension" column="FILE_EXTENSION"/>
		<result property="fileReName" column="FILE_RENAME"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="emplId" column="EMPL_ID"/>
	</resultMap>
	
	<!-- 받은메일함 -->
	<select id="selectRecMail" resultMap="MailResultMap">
		SELECT * FROM MAIL_TBL
		WHERE MAIL_RECIPIENT = #{emplId} AND MAIL_SENDER != MAIL_RECIPIENT AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N'
		ORDER BY MAIL_NO DESC
	</select>
	
	<!-- 보낸메일함 -->
	<select id="selectSendMail" resultMap="MailResultMap">
		SELECT * FROM MAIL_TBL
		WHERE MAIL_SENDER = #{emplId} AND MAIL_SENDER != MAIL_RECIPIENT AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N' AND TEMPORARY_STORAGE = 'N'
		ORDER BY MAIL_NO DESC
	</select>
	
	<!-- 임시보관함 -->
	<select id="selectTemMail" resultMap="MailResultMap">
		SELECT * FROM MAIL_TBL
		WHERE TEMPORARY_STORAGE = 'Y' AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N'
		ORDER BY MAIL_NO DESC
	</select>
	
	<!-- 내게쓴메일함 -->
	<select id="selectMyMail" resultMap="MailResultMap">
		SELECT * FROM MAIL_TBL
		WHERE MAIL_SENDER = MAIL_RECIPIENT AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N'
		ORDER BY MAIL_NO DESC
	</select>
	
	<!-- 중요메일함 -->
	<select id="selectImpMail" resultMap="MailResultMap">
		SELECT * FROM MAIL_TBL
		WHERE IMPORTANT_MAIL = 'Y' AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N'
		ORDER BY MAIL_NO DESC
	</select>
	
	<!-- 휴지통 -->
	<select id="selectWasMail" resultMap="MailResultMap">
		SELECT * FROM MAIL_TBL
		WHERE MAIL_WASTE_BASKET = 'Y' AND EMPL_ID = #{emplId}
		ORDER BY MAIL_NO DESC
	</select>
	
	<!-- 받은메일함 갯수 -->
	<select id="selectMailCountR" resultType="_int">
		SELECT COUNT(*) FROM MAIL_TBL
		WHERE MAIL_RECIPIENT = #{emplId} AND MAIL_SENDER != MAIL_RECIPIENT AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N'
	</select>
	
	<!-- 보낸메일함 갯수 -->
	<select id="selectMailCountS" resultType="_int">
		SELECT COUNT(*) FROM MAIL_TBL
		WHERE MAIL_SENDER = #{emplId} AND MAIL_SENDER != MAIL_RECIPIENT AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N' AND TEMPORARY_STORAGE = 'N'
	</select>
	
	<!-- 임시보관함 갯수 -->
	<select id="selectMailCountT" resultType="_int">
		SELECT COUNT(*) FROM MAIL_TBL
		WHERE TEMPORARY_STORAGE = 'Y' AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N'
	</select>
	
	<!-- 내게쓴메일함 갯수 -->
	<select id="selectMailCountM" resultType="_int">
		SELECT COUNT(*) FROM MAIL_TBL
		WHERE MAIL_SENDER = MAIL_RECIPIENT AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N'
	</select>
	
	<!-- 중요메일함 갯수 -->
	<select id="selectMailCountI" resultType="_int">
		SELECT COUNT(*) FROM MAIL_TBL
		WHERE IMPORTANT_MAIL = 'Y' AND EMPL_ID = #{emplId} AND MAIL_WASTE_BASKET = 'N'
	</select>
	
	<!-- 휴지통 갯수 -->
	<select id="selectMailCountW" resultType="_int">
		SELECT COUNT(*) FROM MAIL_TBL
		WHERE MAIL_WASTE_BASKET = 'Y' AND EMPL_ID = #{emplId}
	</select>
	
	<!-- 메일함 상세조회 -->
	<select id="selectOneByNo" resultMap="MailResultMap">
		SELECT * FROM MAIL_TBL
		WHERE MAIL_NO = #{mailNo}
	</select>
	
	<!-- 첨부파일 조회 -->
	<select id="selectOneByNoMailFile" resultMap="MailFileResultMap">
		SELECT * FROM MAIL_FILE_TBL
		WHERE MAIL_NO = #{mailNo}
	</select>
	
	<!-- 메일 검색 -->
	<select id="searchMail" resultMap="MailResultMap">
		<if test="searchCondition.toString() =='referrer'">
  			SELECT * FROM MAIL_TBL
  			WHERE MAIL_REFERRER LIKE '%' || #{searchValue} || '%'
  		</if>
		<if test="searchCondition.toString() =='recipient'">
  			SELECT * FROM MAIL_TBL
  			WHERE MAIL_RECIPIENT LIKE '%' || #{searchValue} || '%'
  		</if>
		<if test="searchCondition.toString() =='sender'">
  			SELECT * FROM MAIL_TBL
  			WHERE MAIL_SENDER LIKE '%' || #{searchValue} || '%'
  		</if>
  		<if test="searchCondition.toString() =='title'">
  			SELECT * FROM MAIL_TBL
  			WHERE MAIL_TITLE LIKE '%'|| #{searchValue}||  '%'
  		</if>
  		<if test="searchCondition.toString() =='contents'">
  			SELECT * FROM MAIL_TBL
  			WHERE MAIL_CONTENTS LIKE '%' ||  #{searchValue} ||  '%'
  		</if>
  		<if test="searchCondition.toString() =='all'">
	  		SELECT * FROM MAIL_TBL
	  		WHERE MAIL_CONTENTS LIKE '%' ||  #{searchValue} || '%'
	  		OR MAIL_TITLE LIKE '%' ||  #{searchValue} || '%'
	  		OR MAIL_SENDER LIKE '%' ||  #{searchValue} ||  '%'
	  		OR MAIL_RECIPIENT LIKE '%' || #{searchValue} || '%'
	  		OR MAIL_REFERRER LIKE '%' || #{searchValue} || '%'
  		</if>
	</select>
	
	<!-- 메일 및 버그리포트 전송(보낸사람) -->
	<insert id="sendMail" parameterType="Mail">
		INSERT INTO
		MAIL_TBL
		VALUES(MAIL_NO.NEXTVAL, #{emplId}, #{mailRecipient}, #{mailReferrer} , #{mailTitle}, #{mailContents}, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, #{emplId})
	</insert>
	
	<!-- 메일 전송 시 수신자 -->
	<insert id="sendMailRecipient" parameterType="Mail">
		INSERT INTO
		MAIL_TBL
		VALUES(MAIL_NO.NEXTVAL, #{emplId}, #{mailRecipient}, #{mailReferrer} , #{mailTitle}, #{mailContents}, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, #{mailRecipient})
	</insert>
	
	<!-- 메일 및 버그리포트 전송 시 참조자 -->
	<insert id="sendMailReferrer" parameterType="Mail">
		INSERT INTO
		MAIL_TBL
		VALUES(MAIL_NO.NEXTVAL, #{emplId}, #{mailRecipient}, #{mailReferrer} , #{mailTitle}, #{mailContents}, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, #{mailReferrer})
	</insert>
	
	<!-- 메일 및 버그리포트 및 임시저장 시 첨부파일 저장 -->
	<insert id="saveFile" parameterType="MailFile">
		INSERT INTO
		MAIL_FILE_TBL
		VALUES(FILE_NO.NEXTVAL, MAIL_NO.CURRVAL, #{fileName}, #{fileExtension}, #{fileReName}, #{filePath}, #{emplId})
	</insert>
	
	<!-- 임시저장(보낸사람) -->
	<insert id="teporaryStorageMail" parameterType="Mail">
		INSERT INTO
		MAIL_TBL
		VALUES(MAIL_NO.NEXTVAL, #{emplId}, #{mailRecipient}, #{mailReferrer}, #{mailTitle}, #{mailContents}, DEFAULT, DEFAULT, DEFAULT, 'Y', DEFAULT, #{emplId})
	</insert>
	
	<!-- 임시저장된 메일 수정 -->
	<update id="updateTemporaryStorage" parameterType="Mail">
		UPDATE MAIL_TBL SET
		MAIL_RECIPIENT = #{mailRecipient}, MAIL_REFERRER = #{mailReferrer}, MAIL_TITLE = #{mailTitle}, MAIL_CONTENTS = #{mailContents}
		WHERE MAIL_NO = #{mailNo}
	</update>
	
	<!-- 버그리포트 전송 시 수신자 -->
	<insert id="sendBugReportRecipient" parameterType="Mail">
		INSERT INTO
		MAIL_TBL
		VALUES(MAIL_NO.NEXTVAL, #{emplId}, 'hirpDevelopment', #{mailReferrer} , #{mailTitle}, #{mailContents}, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, #{emplId})
	</insert>
	
	<!-- 메일 휴지통으로 이동 -->
	<update id="wasteMail" parameterType="Mail">
		UPDATE MAIL_TBL SET
		MAIL_WASTE_BASKET = 'Y'
		WHERE MAIL_NO = #{mailNo}
	</update>
	
	<!-- 휴지통 메일 복구 -->
	<update id="restoreMail" parameterType="Mail">
		UPDATE MAIL_TBL SET
		MAIL_WASTE_BASKET = 'N'
		WHERE MAIL_NO = #{mailNo}
	</update>
	
	<!-- 중요 메일 -->
	<update id="updateImpMail" parameterType="Mail">
		UPDATE MAIL_TBL SET
		IMPORTANT_MAIL = #{importantMail}
		WHERE MAIL_NO = #{mailNo}
	</update>
	
	<!-- 메일 읽음표시 -->
	<update id="readMail" parameterType="Mail">
		UPDATE MAIL_TBL SET
		MAIL_READ = #{mailRead}
		WHERE MAIL_NO = #{mailNo}
	</update>
	
	<!-- 휴지통 메일 전체 삭제 -->
	<delete id="deleteAllMail">
		DELETE FROM MAIL_TBL WHERE MAIL_WASTE_BASKET = 'Y'
	</delete>
	
	<!-- 휴지통 선택 메일 삭제 -->
	<delete id="deleteSelectMail">
		DELETE FROM MAIL_TBL WHERE MAIL_NO = #{mailNo}
	</delete>
	
</mapper>